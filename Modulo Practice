#include <iostream>
#include <string>

using namespace std;

struct Node 
{ 
    int data; 
    struct Node* next; 
    Node (int data) 
    { 
        this->data = data; 
        next = NULL; 
    } 
}; 
void fun1(struct node* head);
void Reverse4(Node *head);

int main()
{
  int x = 5;
  cout << "test" << endl;
  if(x % 2 == 1)
  {
    cout << x << endl;
    cout << " x mod 2 = 1 " << x << endl;
  }
  else if (x % 2 == 0)
  {
    cout << " x mod 2 = 0 " << x << endl;
  }
  
  return 0;
}
void Reverse4(Node *head)
{
	Node *current = head; 
        Node *prev = NULL, *next = NULL; 
  
  
        while (current != NULL) 
        { 
            // Store next 
            next = current->next; 
  
            // Reverse current node's pointer 
            current->next = prev; 
  
            // Move pointers one position ahead. 
            prev = current; 
            current = next; 
        } 
        head = prev; 
}

//prints linked list in reverse order
//https://www.geeksforgeeks.org/merge-sort-for-linked-list/
void fun1(struct node* head)
{
  if(head == NULL)
    return;
  
  fun1(head->next);
  printf("%d  ", head->data);
}
