#include <iostream>
#include<stdlib.h> 
#include<stdio.h> 

using namespace std;

void merge(int arr[], int left, int middle, int right) 
{ 
    int n1 = middle - left + 1; 
    int n2 =  right - middle; 
    int i, j, k, arrLeft[n1], arrRight[n2]; 
  
    for (i = 0; i < n1; i++)
    {
      arrLeft[i] = arr[left + i]; 
    } 
    for (j = 0; j < n2; j++) 
    {
      arrRight[j] = arr[middle + 1 + j]; 
    }

    i = 0;
    j = 0;
    k = left;
    while (i < n1 && j < n2) 
    { 
      if (arrLeft[i] >= arrRight[j]) 
      { 
        arr[k] = arrLeft[i]; 
        i++; 
      } 
      else
      { 
        arr[k] = arrRight[j]; 
        j++; 
      }
      k++; 
    } 
  
    while (i < n1) 
    { 
      arr[k] = arrLeft[i]; 
      i++; 
      k++; 
    } 
    while (j < n2) 
    { 
      arr[k] = arrRight[j]; 
      j++; 
      k++; 
    } 
}
void mergeSort(int arr[], int temp[], int left, int right) 
{
    if (left < right) 
    {
      int middle = left + (right - left) / 2;
      mergeSort(arr, temp, left, middle);
      mergeSort(arr, temp, middle + 1, right);

      merge(arr, left, middle , right);
    }
}

int main() 
{
  int arr[] = { 1, 5, 4, 8, 10, 2, 6, 9, 12, 11, 3, 7};
  int arrSize = sizeof(arr)/sizeof(arr[0]);
  int temp[arrSize];
  
  cout << "Given array is" << endl; 
  for (int i = 0; i < arrSize; i++)
  {
    cout << " " << arr[i] << " "; 
  }
  cout << endl;

  mergeSort(arr, temp, 0, arrSize - 1);
  
  cout <<"Sorted array is" << endl; 
  for (int i = 0; i < arrSize; i++)
  {
    cout << " " << arr[i] << " "; 
  }

  return 0; 
}
